# version: "3.8"

# services:
#   server:
#     build:
#       context: requirements/nginx
#       dockerfile: Dockerfile
#     ports:
#       - '8080:443'
    # volumes:
    #   - ./src:/var/www/html
    #   - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    # depends_on:
    #   -
    #   - mysql

  # php:
  # mysql:
  # composer:
  # artisan:
  # npm:

version: '3.8'

services:

  nginx:
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    ports:
      - '443:443'
    volumes:
      - wp_data:/var/www/html
      # - ./nginx/conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - mariadb
      - wordpress

  wordpress:
    build:
      context: requirements/wordpress
      dockerfile:  Dockerfile
    # ports:
    #   - "9000:9000"
    volumes:
      - wp_data:/var/www/html
    environment:
      DB_HOST: mariadb
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress

      MARIADB_DATABASE: wordpress  # <-- Added
      MARIADB_USER: wordpress      # <-- Added
      MARIADB_PASSWORD: wordpress  # <-- Added

      WP_URL: localhost            # <-- Added
      WP_TITLE: wordpress        # <-- Added
      WP_ADMIN_USER: dahkang   # <-- Added
      WP_ADMIN_PASS: 1234   # <-- Added
      WP_USER: jgo            # <-- Added
      WP_USER_PASS: 1234  # <-- Added
    depends_on:
      - mariadb

  mariadb:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    expose:
      - 3306
      - 33060

volumes:
  db_data:
  wp_data: